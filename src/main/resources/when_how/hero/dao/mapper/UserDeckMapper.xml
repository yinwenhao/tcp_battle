<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 这里的namespace名字必须为执行该sql的dao地址&nbsp; -->
<mapper namespace="when_how.hero.dao.mapper.UserDeckMapper">

	<resultMap id="UserDeck" type="when_how.hero.dao.entity.UserDeck">
		<id column="user_id" property="userId" />
		<id column="number" property="number" />
		<result column="deck_name" property="deckName" />
		<result column="deck" property="deck" javaType="ArrayList"
			typeHandler="when_how.hero.mybatis.typehandler.IntegerListTypeHandler" />
	</resultMap>

	<!--
（1）当为select语句时：
flushCache默认为false，表示任何时候语句被调用，都不会去清空本地缓存和二级缓存。
useCache默认为true，表示会将本条语句的结果进行二级缓存。
（2）当为insert、update、delete语句时：
flushCache默认为true，表示任何时候语句被调用，都会导致本地缓存和二级缓存被清空。
useCache属性在该情况下没有。
-->
	<select id="getUserDeck" resultMap="UserDeck" flushCache="true">
		<![CDATA[ 
			SELECT * FROM t_user_deck WHERE user_id=#{userId}
        ]]>
	</select>

	<update id="updateUserDeck" parameterType="when_how.hero.dao.entity.UserDeck">
		<![CDATA[ 
			UPDATE t_user_deck SET deck_name=#{deckName}, deck=#{deck,typeHandler=when_how.hero.mybatis.typehandler.IntegerListTypeHandler}
			WHERE user_id=#{userId} AND number=#{number}
        ]]>
	</update>

</mapper>